apiVersion: v1
kind: Secret
metadata:
  name: influxdb-creds
  namespace: influx
type: Opaque
data:
  username: YmNlMGQ3NjAtNjQyNS00YTM5LTg1MDMtMTU3NjE1ZDI3OGFl
  password: ZmE2NDU0ZWMtNGI1Ny00OWNlLWIxZWItZWI4MzVhOGQ1ZThm
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: telegraf-influxdb
  namespace: influx
spec:
  selector:
    matchLabels:
      app: telegraf-influxdb
  template:
    metadata:
      labels:
        app: telegraf-influxdb
    spec:
      containers:
        - name: telegraf
          image: telegraf:latest
          volumeMounts:
            - name: telegraf-config
              mountPath: /etc/telegraf/telegraf.conf
              subPath: telegraf.conf
          env:
            - name: INFLUXDB_URL
              value: http://influxdb:8086
            - name: INFLUXDB_DATABASE
              value: metrics
            - name: INFLUXDB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: influxdb-creds
                  key: username
            - name: INFLUXDB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: influxdb-creds
                  key: password
          args: ["--config", "/etc/telegraf/telegraf.conf"]
        - name: influxdb
          image: influxdb:latest
          volumeMounts:
            - name: influxdb-data
              mountPath: /var/lib/influxdb
            - name: tls-certs
              mountPath: /var/lib/influxdb-tls-certs
          env:
            - name: INFLUXDB_DB
              value: metrics
            - name: INFLUXDB_HTTP_AUTH_ENABLED
              value: "true"
            - name: INFLUXDB_HTTP_HTTPS_ENABLED
              value: "true"
            - name: INFLUXDB_HTTP_TLS_CERTIFICATE
              value: /var/lib/influxdb-tls-certs/server.crt
            - name: INFLUXDB_HTTP_TLS_PRIVATE_KEY
              value: /var/lib/influxdb-tls-certs/server.key
          ports:
            - containerPort: 8086
              name: http
            - containerPort: 8088
              name: https
      volumes:
        - name: telegraf-config
          configMap:
            name: telegraf-config
        - name: influxdb-data
          persistentVolumeClaim:
            claimName: influxdb-data-pvc
        - name: tls-certs
          secret:
            secretName: tls-certs-secret
---
apiVersion: v1
kind: Service
metadata:
  name: influxdb
  namespace: influx
spec:
  selector:
    app: telegraf-influxdb
  ports:
    - name: http
      port: 8086
      targetPort: 8086
    - name: https
      port: 8088
      targetPort: 8088
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: influxdb-data-pvc
  namespace: influx
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: Secret
metadata:
  name: tls-certs-secret
  namespace: influx
type: Opaque
data:
  server.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZNRENDQXhnQ0NRQ1VFRWFvZ0d0eUJUQU5CZ2txaGtpRzl3MEJBUXNGQURCYU1Rc3dDUVlEVlFRR0V3SksKVURFT01Bd0dBMVVFQ0F3RlZHOXJlVzh4RURBT0JnTlZCQWNNQjFOb2FXSjFlV0V4RURBT0JnTlZCQW9NQjBWNApZVzF3YkdVeEZ6QVZCZ05WQkFNTURuUmxiR1ZuY21GbUxteHZZMkZzTUI0WERUSXpNRE15TVRBMU1qRXdORm9YCkRUSTBNRE15TURBMU1qRXdORm93V2pFTE1Ba0dBMVVFQmhNQ1NsQXhEakFNQmdOVkJBZ01CVlJ2YTNsdk1SQXcKRGdZRFZRUUhEQWRUYUdsaWRYbGhNUkF3RGdZRFZRUUtEQWRGZUdGdGNHeGxNUmN3RlFZRFZRUUREQTUwWld4bApaM0poWmk1c2IyTmhiRENDQWlJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dJUEFEQ0NBZ29DZ2dJQkFMd3p0SS95CklCaWtudWRHdUhXU1p3RFNRRGpTaW9ncTQwRU41bzVyVjJPK3ZuMGV4anM1bC93clllUkw4SFdBYlk4YXNUNkEKeVR3amlUT3ZpSU5wRWdJdENyS0lEUHpCY29mVThyaVVYMy96UFFHZTcxanBKaUg5Ti9OU25EckJFSFZrVitpMQphR3l5YXhGNEJaaVdtZjRGSS9jZDlmcTcxTFd1MmRUTm5rdTE1S1VabHV1c2ZKU2ZlaWFubzRHL3VoWTlmVy9HCmdqMWlxdFVWR3ZTZUczNXJEYUNsUlVTdlRNTzZVZXQ4aDhydnBTb2xwREVJUGNEbnhDUWJqemF2L3RaWkNKaVMKYkVwZzJaaEsxK0d1MzZMRDdBS0ZoRFcvL0NMQzRYV2xXV3Y4Vk5TVTFCNXRJNGRxbGZRcndPanE0NktRRFJWVQp0TVZQcmJHUEp5UUVLSGwybkM4bG8xWi9jd1ZLN2RiUy9MRXRkaTNnVllTbis1dXBPY3FVdkppUGpmNi9oQjd5CkwvK2Z5WUtSeVVGc0tSUENTOW02RWppSStKbHVrQ2xibDRTaFArdFVyOWVHMFM2WjdRMXFIeiszZGJUNDNsdysKYkd5eHFkSTAxdjk4RGVpV2FnT2NoQU5RQ2MyN2tNRXBzTHZqblZiTGtrNHUrVE9HTFVabmNDUUV3V050UFM4SApORnp3cmZObCtLYlpzNCs1UURWSzIvWHFOd0lpUGFld25JLzlNY3JDQVE4NlRyUGFqaGhSMnB3SVVVY1hFY2c5Ckp1RXlTUVMvR0MyZjJZdU5BL3NTR0RTbWNKR2VwQURXdzloR2RPQXVYT3lyeGJKY3lwTTUzdjIzd1QwZ05FOHgKSEpzaS9mU28yVE82ckdiT0J4TkVtb3YyaGNwOE5NSWlwS2VGQWdNQkFBRXdEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0lCQUVKTnZxbUdJNUFSeENEakV2NUZYTUkxWjBMTjF0TDNmQmlnS1VFeGRwRWo5ejdENHg3aWZwWUJFbXNuCjNqTVFNUGppRkhHV3YyS3JYUzRZU2h5TFF3YjBVd0hZUWp4d2swSEw4QUNRd0EwZnB0bk12RHYxS1A5eWZObXgKSjBWSStNbGpub1dwb3ZYTzhnbzZudCtIenNVeWxzdEV4RnNIYThmbGM0TTZGY2Y1VGp3ZGEvcU1KakdBaytINQpoWVBTYU12QmFLeTIxL3QwVmh6Y3RMa1BuUFpIc3hxbUtBTzd5V1l4UFJwTUZEZkw3elhPRWczclBFNEVGV2dyCmtNSWZpWk9iNUlOZVhwYUd4UUYxeTZ0VVdmOU1Wa0ZqTC9WUDNGWGdqcUtoaXAzSm9SV21MMTNXeEM4UEtpb0YKNi9wRGp3Q0tnNnFTcGJTd3prTitoM0JoRit2RDFCOVlmbjBSbzl4bmhZTUtWYTJxNW9TTVpDWGdySTB2cklkSgpGNko1K0xvNGovSkxIR1pOVkRnOUg0TVhwSlpVUm1aTk5xRjBpcFZNR3VKUVQ1K1NrNlVLbXdYUUQ0cE9mNkFVCjdrZTd6Z2g0Vi9RTHZXZ2ttbFZBeFZTMkdNNzdhV0VIcGxPb09ha3Q3U0tuQXd0M2w1cDBSRFdyc2RuU2lpTEYKQ1lRbzJpK2RtRmNtVVlSNFZVMHdaYUxsSnR2VW05RjZzZDY5cDdON2MzYmxKRXhmN00zbHFNRmZqWjZmbFd6MgpNS3RLcTUwQjJOL0lvVzFyWGZCK2tvK1krL0hzZGFQQXlaL2lkcFVhNHdUUy9scGhVdnRSQXVDdGZWRWttWlZUCjJlVmZpWVE0ZmxrSDFhcCtXK0NsMmFscXUySjFaNjBDU3o4UUovUnlUaFJ3U1hldwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  server.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUpRZ0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQ1N3d2dna29BZ0VBQW9JQ0FRQzhNN1NQOGlBWXBKN24KUnJoMWttY0Ewa0E0MG9xSUt1TkJEZWFPYTFkanZyNTlIc1k3T1pmOEsySGtTL0IxZ0cyUEdyRStnTWs4STRregpyNGlEYVJJQ0xRcXlpQXo4d1hLSDFQSzRsRjkvOHowQm51OVk2U1loL1RmelVwdzZ3UkIxWkZmb3RXaHNzbXNSCmVBV1lscG4rQlNQM0hmWDZ1OVMxcnRuVXpaNUx0ZVNsR1picnJIeVVuM29tcDZPQnY3b1dQWDF2eG9JOVlxclYKRlJyMG5odCthdzJncFVWRXIwekR1bEhyZklmSzc2VXFKYVF4Q0QzQTU4UWtHNDgyci83V1dRaVlrbXhLWU5tWQpTdGZocnQraXcrd0NoWVExdi93aXd1RjFwVmxyL0ZUVWxOUWViU09IYXBYMEs4RG82dU9pa0EwVlZMVEZUNjJ4Cmp5Y2tCQ2g1ZHB3dkphTldmM01GU3UzVzB2eXhMWFl0NEZXRXAvdWJxVG5LbEx5WWo0Myt2NFFlOGkvL244bUMKa2NsQmJDa1R3a3ZadWhJNGlQaVpicEFwVzVlRW9UL3JWSy9YaHRFdW1lME5haDgvdDNXMCtONWNQbXhzc2FuUwpOTmIvZkEzb2xtb0RuSVFEVUFuTnU1REJLYkM3NDUxV3k1Sk9Mdmt6aGkxR1ozQWtCTUZqYlQwdkJ6UmM4SzN6ClpmaW0yYk9QdVVBMVN0djE2amNDSWoybnNKeVAvVEhLd2dFUE9rNnoybzRZVWRxY0NGRkhGeEhJUFNiaE1ra0UKdnhndG45bUxqUVA3RWhnMHBuQ1JucVFBMXNQWVJuVGdMbHpzcThXeVhNcVRPZDc5dDhFOUlEUlBNUnliSXYzMApxTmt6dXF4bXpnY1RSSnFMOW9YS2ZEVENJcVNuaFFJREFRQUJBb0lDQUdvTWRLVmNHU3ZwcjBUQk8vVzhQbUJmCkdTTXJ1RFlNZkt2T3FtajhJVzBxTVdxTnFjUDdxeUhFVEUvNVhwREhnblRONUt4RW82QklvZXBHOGhTaVl5eG8KdHd0czBHeW9rT0hyWTY0UXBWT1MrNEJyVDVGNUp5eWw1QjR2SWF1VjJMRmRqbytwa1NNVzBuQXdnbTYrQmgzMgpSWkxkQmh0NE5kNytuTzVsd3RvRXI4YzhpU2RadFlXRjY2M1dick1SRjBtcThvREdpZU1QTXhZSTQzeU5qdzZJClFsQ1FjRnpJcnVmbm1IdXFXMVpGL1hxblpVTGYwdlJkWk0rMzI5WkVDOFE2dlRaRDQ5TnhpWXRnT1ErSm02aTYKMzhWMytNelUxcjI3dEpHM1Q1RWl5YVpVQ3NidVZzUGFrbzdaRE1YeWZieS9rUy9BNEhBQ2V1eC9ydDJEbms0RAozTTJYa0JpMmZwbWs4Q0pZSTB3OTlZMm9pcnhmZEVpMURvdW5NV2JIbTU5MFlycEhyYXR4Tm1SdFF4VENSV1UvCnVibVZDOC8vREppeTV4TjM1Yy9USURrNHdnTktJSi9reHN1SENsTU91ajBIVVorOUtJY2toV0dZMUVpall5aEgKL1ZGQm1UbngzMlV5R2d0dC9hN0gwV0lXUmRrRU15M0VDMzF5UHVueEEwVmQwSi85SzJWY2cxZ0hLNXNuRFRUaAo1bXBpZEVOcmVzYy8wWjUwZm15TVZhMW53U3JCR0pnUE1jZVJIbW5OSjZHQlBQSG10MGVEdWZxTEw3QWFTVTJvCkIrTThDa1gvcnJrd0swNlVtaFFiUDlhMVljcXN1TzdQRi9vV2VxbDFrK01jQTUrcnBhd0ZtTVI0RDZCUkZlWWYKL3JuT0k3cjRhbWEzUzBTZFVUMHRBb0lCQVFEZVNXcXU1WFRMY1dMVXNVek1BWGRjMCtNaFBDcjY0VU91Zk1CKwpseExFcDcwMjBMTWV4VXY4bSsyaHNZL1dZK0tjSE9NdmkwUUNuKzdoY2ZsWVhEanp5VWRvRU1GRXBNeng2bXJaCkh5NnJETTJPUnYwNTgrSllyQTBPWDRFdW5xMWtlbUNNVWs5VXpGNXdEVUZhMFpUV0x0dHJOaHFmTHpzclJNeVYKU1MyTWc0Tlg2UStSMzRWektheU4wdVgxanZsQUo4VENKV0pEMTJNSjhjSUN3bGxtWVY4MnZVSTJ6NjJ6L2tzNgpNTXc4T2dzZE82WTh0bTdmcWhBWFV5a1ZZczRqdktLdmY3QU11SmlYQmNRUkZ2dnNCeU1kd1dxY1VBNkt1b3U3CklMeFd6aW1MZGNVZ1JlTGtRdHFueTNFM3lpRXZhaGZpUVV4c0VLVlBhaWFTTHlYM0FvSUJBUURZdnVabXhhVFIKL2pXS0FIU2xlMjErTHZ2clptNGxUWlhsUzVwQU5EZ1ludWIyNXEveUt5SGxMSWZVMkd4VVo4R0RCdUQ2QUdFeAorK296RGxvT2hiTjVZMlRoLytpeEtLaWg3UXZGWEVBbkRpRFRQaFZ3dkllUlJUWjRSbFZ3ZHVURklYYk5OakQ5ClRhMHM2NHhYWDQ5R1lyUnF4NTA2ckh6VjBsRXNGTmMwdE44SGJmZXlUNzR1YjV1b0Q2cEpud2cxa1E3cVY1UVcKb2U0WElmMXhKZFJoeTRISGtqcDhSK0pSeHo4bjZaK1VacmJ0UE14TkQxRlB1OU9XWnh5ak1ERHA0YWxlSzJRRApMR3ZPcXA2OUsvalVHbmdQWFBWT0ZMeld1UGtpb3ZGZlRkNjFySmdQWDZrOTZoRWh6czVCcG5JSE0xNzNhbGVoCkdrTk1MajdBYkk5akFvSUJBUUNxT0RwVDJDNktKRGYwZkJrOUY5cFo0WUJLMFJKd3I5UHVhR1hZQ3NRNmgrRGoKZXduUGhISmQ3T0lhTWlqZG1mdk1aR3FzMjg2bTIrWklDY2xSbXIyYUlnWm1jSDR2bkt1OGpUQnBOL0c2MXNFSwpOTjV4Wkl0dUw4S0h3U2JobG0xZFJrRnM4eE1BOHNkV3N5L2E1aWM5cFFBdHAyN1hlNG1wNXJOcmxuQWs3QWpHClp4aWZNalcxTExLUW9IR3NpMkhmZVJTNVAzdHlUQnZ4WDRxY0prdmpsS2tlOStzZW9nWjRrVUQyUEt3SmFzRmMKRDNPTGhvQjlFblBrQ0xDclNkQmxtV3hUVEVwNlUxbTJQSm9hSkNtaVl3ekhHbmdUWDFMamRWclBYNUFhUVNHYgpSQUpDWm9JTEhnN204Mm10dVVHVVY0QVdxTDVtK3BBOHNpTDdTdE9kQW9JQkFHSkRxaEZONmJ1S2xKdE1PWllNCnIwZFY1Y0NEWDh4cHNGdVVPd3FBb2k0SFhJN3paekZUZkxwNXhkc3BnM09BMXFxZ283NjBEVnlyNlRIY2Y5ZTEKcGZpU3Axb091MkFXSHQzS3FsdC94MVh0Z2RSRGdWVHJKRXNvSmRuQmlWckRqRlFUSjlsQmlGUk9zd1I2aGRYVwo3UTNzRWYrWElDRkpzZzcrbXU1eFJHQVE0RXh0L3E1SW1PQlVtUzFJYk51VHpoVDYvdGdmZkhRR1Zmc0czZkErClJsdFArRGFTaFJGelJaZnR6U1E3TnE0QkkwM0xFcFNkTFRBSTU1UjRpdk14RmZ2eTR1WmVwYWtLcXBXM3BOLysKMzRESnYwUzMwRDdtQi9jUlJXSCtuWStucmlDUGJ5RUpMYUYwVFBBVzRrdkJPbEVwYVJTaWtiZm9RRHA1Zk5tZwpYaUVDZ2dFQUh6a3ZJdE13NGxST3RHa2xuTXB6UU9uUmlxb3BMenhHOXNsa3NvRndNMnd0TStyTFo0WllRVXFkCnV5bW9RRlJCQnpBam5HdlRTZUExUFEveWEweUJsT3ArZVhYbDlwYkRaRFNOVTV5aVhCZXI4eGVaV045MUh5TUkKRHdOOHZiQVIyS3RkRGZsa0FjaEZla2RyQXcxVmVOYkZ2b2MvWUJ6VWxEWXEyeHVveDlOUzJYdUZ6c2JQUkl5eQpUa0tTODU2TzVxOHZjMFh0bmNnZ0YzTjVCS0lFb2ZJVkMvVmhEeCtUd0NPdk9WVDE3TWxMOC9LYWtqQjhBMVdVCjd3b3NTNmYwVTlodVVPWjZjZVN3OWhyenY3NzZzc2luSkk5ZmdRcTZSOGZlRE1xekhaTVh4enM4cVRWNXhBb0MKUjhzOHYwUGdNWXlaZjgreTRETTA0SlBNb3JlOWVRPT0KLS0tLS1FTkQgUFJJVkFURSBLRVktLS0tLQo=
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: telegraf-config
  namespace: influx
data:
  telegraf.conf: |
    [global_tags]
      role = "tls-monitor"

    [agent]
      interval = "60s"
      round_interval = true

    [[outputs.influxdb]]
      urls = ["http://influxdb:8086"]
      database = "metrics"
      retention_policy = ""
      write_consistency = "any"
      timeout = "5s"
      username = "${INFLUXDB_USERNAME}"
      password = "${INFLUXDB_PASSWORD}"

    [[inputs.x509_cert]]
      sources = ["https://google.com:443"]
      insecure_skip_verify = false
      timeout = "10s"
      name_override = "tls_cert_expiry"
      data_format = "value"
      tagexclude = ["source", "serial_number", "public_key_algorithm", "public_key_size", "subject_common_name", "subject_organization", "subject_organizational_unit", "issuer_common_name", "issuer_organization", "issuer_organizational_unit", "validity_not_before", "validity_not_after"]
